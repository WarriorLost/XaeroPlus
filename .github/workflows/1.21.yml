name: 1.21 Build

on:
  pull_request:
  push:
    branches:
      - "1.21"
env:
  MINECRAFT_VERSION: "1.21"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Gradle Wrapper Verification
      uses: gradle/wrapper-validation-action@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Elevate wrapper permissions
      run: chmod +x ./gradlew

    - name: Build Mods
      uses: gradle/gradle-build-action@v3
      with:
        arguments: build

    - name: Get WorldMap Version Fabric
      run: |
        echo "WORLDMAP_VERSION_FABRIC=$(./gradlew -q printWorldMapVersionFabric)" >> $GITHUB_ENV

    - name: Get Minimap Version Fabric
      run: |
        echo "MINIMAP_VERSION_FABRIC=$(./gradlew -q printMinimapVersionFabric)" >> $GITHUB_ENV

    - name: Get WorldMap Version Forge
      run: |
        echo "WORLDMAP_VERSION_FORGE=$(./gradlew -q printWorldMapVersionForge)" >> $GITHUB_ENV

    - name: Get Minimap Version Forge
      run: |
        echo "MINIMAP_VERSION_FORGE=$(./gradlew -q printMinimapVersionForge)" >> $GITHUB_ENV

    - name: Get WorldMap Version NeoForge
      run: |
        echo "WORLDMAP_VERSION_NEO=$(./gradlew -q printWorldMapVersionNeo)" >> $GITHUB_ENV

    - name: Get Minimap Version NeoForge
      run: |
        echo "MINIMAP_VERSION_NEO=$(./gradlew -q printMinimapVersionNeo)" >> $GITHUB_ENV

    - name: Get XaeroPlus Version
      run: |
        echo "XP_VERSION=$(./gradlew -q printXaeroPlusVersion)" >> $GITHUB_ENV

    - name: Get Fabric Jar Filename
      run: |
        echo "XP_FABRIC=XaeroPlus-${{ env.XP_VERSION}}+fabric-${{ env.MINECRAFT_VERSION }}-WM${{ env.WORLDMAP_VERSION_FABRIC }}-MM${{ env.MINIMAP_VERSION_FABRIC }}" >> $GITHUB_ENV

    - name: Get Forge Jar Filename
      run: |
        echo "XP_FORGE=XaeroPlus-${{ env.XP_VERSION}}+forge-${{ env.MINECRAFT_VERSION }}-WM${{ env.WORLDMAP_VERSION_FORGE }}-MM${{ env.MINIMAP_VERSION_FORGE }}" >> $GITHUB_ENV

    - name: Get Neo Jar Filename
      run: |
        echo "XP_NEO=XaeroPlus-${{ env.XP_VERSION}}+neoforge-${{ env.MINECRAFT_VERSION }}-WM${{ env.WORLDMAP_VERSION_NEO }}-MM${{ env.MINIMAP_VERSION_NEO }}" >> $GITHUB_ENV

    - name: Upload Fabric Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.XP_FABRIC }}
        path: fabric/build/libs/${{ env.XP_FABRIC }}.jar
        if-no-files-found: error

    - name: Upload Forge Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.XP_FORGE }}
        path: forge/build/libs/${{ env.XP_FORGE }}.jar
        if-no-files-found: error

    - name: Upload NeoForge Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.XP_NEO }}
        path: neo/build/libs/${{ env.XP_NEO }}.jar
        if-no-files-found: error
